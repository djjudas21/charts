apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "smtp-relay.fullname" . }}
  labels:
    {{- include "smtp-relay.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "smtp-relay.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "smtp-relay.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "smtp-relay.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      volumes:
      - name: sockets
        emptyDir: {}
      - name: log
        emptyDir: {}
      - name: saslpasswd
        emptyDir: {}
      containers:
        - name: postfix
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          {{- if .Values.persistence.enabled }}  
          - name: spool
            mountPath: /var/spool/postfix
          {{- end }}
          - name: sockets
            mountPath: /var/spool/postfix/public
          - name: log
            mountPath: /var/log
          - name: saslpasswd
            mountPath: /etc/postfix/sasl
          env:
            - name: SMTP_RELAY_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-host
            - name: SMTP_RELAY_MYHOSTNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-myhostname
            - name: SMTP_RELAY_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-username
            - name: SMTP_RELAY_MYNETWORKS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-mynetworks
            - name: SMTP_RELAY_WRAPPERMODE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-tls-wrappermode
            - name: SMTP_TLS_SECURITY_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-tls-security-level
            - name: SMTP_RELAY_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "smtp-relay.fullname" . }}
                  key: smtp-relay-password
          ports:
            - name: smtp
              containerPort: 2525
              protocol: TCP
          {{- if .Values.probes.liveness.enabled }}
          livenessProbe:
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
            tcpSocket:
              port: smtp
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.liveness.timeoutSeconds }}
          {{-  end }}
          {{- if .Values.probes.readiness.enabled }}
          readinessProbe:
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
            tcpSocket:
              port: smtp
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.readiness.timeoutSeconds }}
          {{-  end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        {{- if .Values.metrics.enabled }}
        - name: metrics
          image: chatwork/kumina-postfix-exporter:edge
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args: ["--postfix.showq_path", "/var/spool/postfix/public/showq", "--postfix.logfile_path", "/dev/null"]
          ports:
            - name: metrics
              containerPort: 9154
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9154
          volumeMounts:
          {{- if .Values.persistence.enabled }}  
          - name: spool
            mountPath: /var/spool/postfix
          {{- end }}
          - name: sockets
            mountPath: /var/spool/postfix/public
          - name: log
            mountPath: /var/log
        {{-  end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}  
  volumeClaimTemplates:
  - metadata:
      name: spool
    spec:
      accessModes: 
      - {{ .Values.persistence.accessMode }}
      storageClassName: {{ .Values.persistence.storageClass }}
      resources:
        requests:
          storage: {{ .Values.persistence.size }}
  {{- end }}
