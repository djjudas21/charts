apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "adventurelog.fullname" . }}-backend
  labels:
    {{- include "adventurelog.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "adventurelog.selectorLabels" . | nindent 6 }}
      component: backend
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "adventurelog.labels" . | nindent 8 }}
        component: backend
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "adventurelog.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Always
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.port }}
              protocol: TCP
          env:
            - name: PGHOST
              value: {{ include "adventurelog.fullname" . }}-db
            - name: PGDATABASE
              value: {{ .Values.postgis.database }}
            - name: PGUSER
              value: {{ .Values.postgis.user }}
            - name: PGPASSWORD
              value: {{ .Values.postgis.password }}
              #valueFrom:
              #  secretKeyRef:
              #    name: adventurelog-secret
              #    key: adventure-postgres-password
            - name: SECRET_KEY
              value: adventure
            # Publicly accessible URL of the backend. Used for generating image URLs.
            - name: PUBLIC_URL
              value: https://{{ .Values.ingress.hosts.backend }}
            # URL to the frontend, used for email generation.
            - name: FRONTEND_URL
              value: https://{{ .Values.ingress.hosts.frontend }}
            - name: CSRF_TRUSTED_ORIGINS
              value: https://{{ .Values.ingress.hosts.frontend }}
            - name: DJANGO_ADMIN_USERNAME
              value: "admin"
            - name: DJANGO_ADMIN_PASSWORD
              value: "admin"
            - name: DJANGO_ADMIN_EMAIL
              value: "admin@example.com"
            - name: DEBUG
              value: "True"
            - name: BACKEND_PORT
              value: "8016"
          {{- with .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: adventure-journal
              mountPath: /code/media
      volumes:
        - name: adventure-journal
          persistentVolumeClaim:
            claimName: {{ include "adventurelog.fullname" . }}-backend
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
