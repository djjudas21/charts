apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: foreman
    tier: app
  name: rails-deployment
  namespace: foreman
spec:
  minReadySeconds: 10
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: foreman
      tier: app
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: foreman
        tier: app
      name: rails
    spec:
      containers:
      - args:
        - bundle
        - exec
        - rails
        - server
        env:
        - name: RAILS_LOG_TO_STDOUT
          value: "true"
        - name: RAILS_SERVE_STATIC_FILES
          value: "true"
        {{- if .Values.postgresql.enabled }}
        - name: DATABASE_URL
          value: postgres://{{ .Values.postgresql.auth.username }}:{{ .Values.postgresql.auth.password }}@{{ include "foreman.fullname" . }}-postgresql/{{ .Values.postgresql.auth.database }}?pool=5 
        {{- end }}
        - name: RAILS_ENV
          value: production
        - name: SECRET_KEY_BASE
          valueFrom:
            secretKeyRef:
              key: secret-key-base
              name: secret-key-base
        - name: FOREMAN_FQDN
          value: foreman.example.com
        {{- if .Values.redis.enabled }}
        - name: FOREMAN_RAILS_CACHE_STORE_TYPE
          value: redis
        - name: FOREMAN_RAILS_CACHE_STORE_URLS
          value: redis://{{ include "foreman.fullname" . }}-redis:$(REDIS_SERVICE_PORT)/0
        {{- end }}
        image: quay.io/foreman/foreman:develop
        imagePullPolicy: Always
        name: rails
        ports:
        - containerPort: {{ .Values.service.port }}
          protocol: TCP
        resources: {}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
