# Default values for foreman.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

foremanFqdn: foreman.example.com
secret_key_base: changeme
initialAdminPassword: changeme

image:
  repository: quay.io/foreman/foreman
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Rails service
service:
  type: ClusterIP
  port: 3000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: foreman-prod.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

rails:
  replicaCount: 1
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  podAnnotations: {}
  podLabels: {}

  livenessProbe:
    httpGet:
      path: /
      port: http
  readinessProbe:
    httpGet:
      path: /
      port: http

  nodeSelector: {}

  tolerations: []

  affinity: {}

worker:
  replicaCount: 1
  resources: {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  podAnnotations: {}
  podLabels: {}

  # Worker doesn't currently have exposed ports
  #livenessProbe:
  #  httpGet:
  #    path: /
  #    port: http
  #readinessProbe:
  #  httpGet:
  #    path: /
  #    port: http

  nodeSelector: {}

  tolerations: []

  affinity: {}

# -- Enable and configure postgresql database subchart under this key.
#    For more options see [postgresql chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/postgresql)
# @default -- See values.yaml
postgresql:
  enabled: false
  auth:
    postgresPassword:	adminpw
    username:	foreman
    password:	foreman
    database: foreman
  primary:
    persistence:
      enabled: false
      # storageClass: ""
      size: 1Gi
    resources: {}

# Bitnami Redis
# https://github.com/bitnami/charts/blob/master/bitnami/redis/values.yaml
redis:
  enabled: false
  architecture: standalone
  auth:
    enabled: false
    sentinel: true
    password: "redis"
    existingSecret: ""
    existingSecretPasswordKey: ""
    usePasswordFiles: false
  master:
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 8Gi
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
    prometheusRule:
      enabled: false
