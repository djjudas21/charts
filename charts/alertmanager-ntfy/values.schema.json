{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "properties": {
    "affinity": {
      "required": [],
      "title": "affinity",
      "type": "object"
    },
    "config": {
      "properties": {
        "http": {
          "properties": {
            "addr": {
              "default": ":8000",
              "required": [],
              "title": "addr",
              "type": "string"
            },
            "auth": {
              "properties": {
                "password": {
                  "default": "verysecure",
                  "required": [],
                  "title": "password",
                  "type": "string"
                },
                "username": {
                  "default": "alertmanager",
                  "required": [],
                  "title": "username",
                  "type": "string"
                }
              },
              "required": [],
              "title": "auth",
              "type": "object"
            }
          },
          "required": [],
          "title": "http",
          "type": "object"
        },
        "ntfy": {
          "properties": {
            "auth": {
              "properties": {
                "basic": {
                  "properties": {
                    "password": {
                      "default": "verysecure",
                      "required": [],
                      "title": "password",
                      "type": "string"
                    },
                    "username": {
                      "default": "admin",
                      "required": [],
                      "title": "username",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "basic",
                  "type": "object"
                },
                "token": {
                  "default": "verysecureauthtoken",
                  "description": "OR",
                  "required": [],
                  "title": "token",
                  "type": "string"
                }
              },
              "required": [],
              "title": "auth",
              "type": "object"
            },
            "baseurl": {
              "default": "https://ntfy.sh",
              "required": [],
              "title": "baseurl",
              "type": "string"
            },
            "notification": {
              "properties": {
                "priority": {
                  "default": "status == \"firing\" ? \"urgent\" : \"default\"\n",
                  "description": "Priority reference: https://docs.ntfy.sh/publish/#message-priority\nCan either be a hardcoded string or a gval expression that evaluates to a string",
                  "required": [],
                  "title": "priority",
                  "type": "string"
                },
                "tags": {
                  "items": {
                    "anyOf": [
                      {
                        "properties": {
                          "condition": {
                            "default": "status == \"resolved\"",
                            "required": [],
                            "title": "condition",
                            "type": "string"
                          },
                          "tag": {
                            "default": "+1",
                            "required": [],
                            "title": "tag",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "type": "object"
                      },
                      {
                        "properties": {
                          "condition": {
                            "default": "status == \"firing\"",
                            "required": [],
                            "title": "condition",
                            "type": "string"
                          },
                          "tag": {
                            "default": "rotating_light",
                            "required": [],
                            "title": "tag",
                            "type": "string"
                          }
                        },
                        "required": [],
                        "type": "object"
                      }
                    ],
                    "required": []
                  },
                  "required": [],
                  "title": "tags",
                  "type": "array"
                },
                "templates": {
                  "properties": {
                    "description": {
                      "default": "{{ index .Annotations \"description\" }}\n",
                      "required": [],
                      "title": "description",
                      "type": "string"
                    },
                    "headers": {
                      "properties": {
                        "X-Click": {
                          "default": "{{ .GeneratorURL }}\n",
                          "required": [],
                          "title": "X-Click",
                          "type": "string"
                        }
                      },
                      "required": [],
                      "title": "headers",
                      "type": "object"
                    },
                    "title": {
                      "default": "{{ if eq .Status \"resolved\" }}Resolved: {{ end }}{{ index .Annotations \"summary\" }}\n",
                      "required": [],
                      "title": "title",
                      "type": "string"
                    }
                  },
                  "required": [],
                  "title": "templates",
                  "type": "object"
                },
                "topic": {
                  "default": "alertmanager",
                  "description": "The topic can either be a hardcoded string or a gval expression that evaluates to a string",
                  "required": [],
                  "title": "topic",
                  "type": "string"
                }
              },
              "required": [],
              "title": "notification",
              "type": "object"
            }
          },
          "required": [],
          "title": "ntfy",
          "type": "object"
        }
      },
      "required": [],
      "title": "config",
      "type": "object"
    },
    "fullnameOverride": {
      "default": "",
      "required": [],
      "title": "fullnameOverride",
      "type": "string"
    },
    "global": {
      "description": "Global values are values that can be accessed from any chart or subchart by exactly the same name.",
      "required": [],
      "title": "global",
      "type": "object"
    },
    "image": {
      "description": "This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/",
      "properties": {
        "pullPolicy": {
          "default": "IfNotPresent",
          "description": "This sets the pull policy for images.",
          "required": [],
          "title": "pullPolicy",
          "type": "string"
        },
        "repository": {
          "default": "ghcr.io/alexbakker/alertmanager-ntfy",
          "required": [],
          "title": "repository",
          "type": "string"
        },
        "tag": {
          "default": "",
          "description": "Overrides the image tag whose default is the chart appVersion.",
          "required": [],
          "title": "tag",
          "type": "string"
        }
      },
      "required": [],
      "title": "image",
      "type": "object"
    },
    "imagePullSecrets": {
      "description": "This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/",
      "items": {
        "required": []
      },
      "required": [],
      "title": "imagePullSecrets",
      "type": "array"
    },
    "ingress": {
      "description": "This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/",
      "properties": {
        "annotations": {
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "className": {
          "default": "",
          "required": [],
          "title": "className",
          "type": "string"
        },
        "enabled": {
          "default": false,
          "required": [],
          "title": "enabled",
          "type": "boolean"
        },
        "hosts": {
          "description": "kubernetes.io/ingress.class: nginx\nkubernetes.io/tls-acme: \"true\"",
          "items": {
            "anyOf": [
              {
                "properties": {
                  "host": {
                    "default": "chart-example.local",
                    "required": [],
                    "title": "host",
                    "type": "string"
                  },
                  "paths": {
                    "items": {
                      "anyOf": [
                        {
                          "properties": {
                            "path": {
                              "default": "/",
                              "required": [],
                              "title": "path",
                              "type": "string"
                            },
                            "pathType": {
                              "default": "ImplementationSpecific",
                              "required": [],
                              "title": "pathType",
                              "type": "string"
                            }
                          },
                          "required": [],
                          "type": "object"
                        }
                      ],
                      "required": []
                    },
                    "required": [],
                    "title": "paths",
                    "type": "array"
                  }
                },
                "required": [],
                "type": "object"
              }
            ],
            "required": []
          },
          "required": [],
          "title": "hosts",
          "type": "array"
        },
        "tls": {
          "items": {
            "required": []
          },
          "required": [],
          "title": "tls",
          "type": "array"
        }
      },
      "required": [],
      "title": "ingress",
      "type": "object"
    },
    "livenessProbe": {
      "description": "This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/",
      "properties": {
        "httpGet": {
          "properties": {
            "path": {
              "default": "/health",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": "http",
              "required": [],
              "title": "port",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        }
      },
      "required": [],
      "title": "livenessProbe",
      "type": "object"
    },
    "nameOverride": {
      "default": "",
      "description": "This is to override the chart name.",
      "required": [],
      "title": "nameOverride",
      "type": "string"
    },
    "nodeSelector": {
      "required": [],
      "title": "nodeSelector",
      "type": "object"
    },
    "podAnnotations": {
      "description": "This is for setting Kubernetes Annotations to a Pod.\nFor more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/",
      "required": [],
      "title": "podAnnotations",
      "type": "object"
    },
    "podLabels": {
      "description": "This is for setting Kubernetes Labels to a Pod.\nFor more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/",
      "required": [],
      "title": "podLabels",
      "type": "object"
    },
    "podSecurityContext": {
      "required": [],
      "title": "podSecurityContext",
      "type": "object"
    },
    "readinessProbe": {
      "properties": {
        "httpGet": {
          "properties": {
            "path": {
              "default": "/health",
              "required": [],
              "title": "path",
              "type": "string"
            },
            "port": {
              "default": "http",
              "required": [],
              "title": "port",
              "type": "string"
            }
          },
          "required": [],
          "title": "httpGet",
          "type": "object"
        }
      },
      "required": [],
      "title": "readinessProbe",
      "type": "object"
    },
    "replicaCount": {
      "default": 1,
      "description": "This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/",
      "required": [],
      "title": "replicaCount",
      "type": "integer"
    },
    "resources": {
      "required": [],
      "title": "resources",
      "type": "object"
    },
    "securityContext": {
      "required": [],
      "title": "securityContext",
      "type": "object"
    },
    "service": {
      "description": "This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/",
      "properties": {
        "port": {
          "default": 8000,
          "description": "This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports",
          "required": [],
          "title": "port",
          "type": "integer"
        },
        "type": {
          "default": "ClusterIP",
          "description": "This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types",
          "required": [],
          "title": "type",
          "type": "string"
        }
      },
      "required": [],
      "title": "service",
      "type": "object"
    },
    "serviceAccount": {
      "description": "This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/",
      "properties": {
        "annotations": {
          "description": "Annotations to add to the service account",
          "required": [],
          "title": "annotations",
          "type": "object"
        },
        "automount": {
          "default": true,
          "description": "Automatically mount a ServiceAccount's API credentials?",
          "required": [],
          "title": "automount",
          "type": "boolean"
        },
        "create": {
          "default": true,
          "description": "Specifies whether a service account should be created",
          "required": [],
          "title": "create",
          "type": "boolean"
        },
        "name": {
          "default": "",
          "description": "The name of the service account to use.\nIf not set and create is true, a name is generated using the fullname template",
          "required": [],
          "title": "name",
          "type": "string"
        }
      },
      "required": [],
      "title": "serviceAccount",
      "type": "object"
    },
    "tolerations": {
      "items": {
        "required": []
      },
      "required": [],
      "title": "tolerations",
      "type": "array"
    }
  },
  "required": [],
  "type": "object"
}