# Default values for owncloud.

global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

ownCloud:
  # -- ownCloud admin user
  adminUsername: "admin"
  # -- ownCloud admin password
  adminPassword: "admin"
  mail:
    # -- SMTP domain
    domain: "cluster.local"
    # -- SMTP sender
    fromAddress: owncloud
    # -- Mail mode
    mode: smtp
    smtp:
      # -- SMTP server hostname
      host: ""
      # -- SMTP server port
      port: ""
      secure: ""
      # -- Enable SMTP server auth
      auth: false
      # -- SMTP server user
      username: ""
      # -- SMTP server password
      password: ""
  externalDatabase:
    host: ""
    database: owncloud
    username: owncloud
    password: owncloudsecretpassword

# -- Number of replicas
replicaCount: 1

image:
  # -- image repository
  repository: owncloud/server
  # -- image pull policy
  pullPolicy: IfNotPresent
  # -- image tag
  # @default -- chart.appVersion
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # @default -- a name is generated using the fullname template
  name: ""

podAnnotations: {}

# -- Configures service settings for the chart.
# @default -- See values.yaml
service:
  type: ClusterIP
  port: 8080

# -- Enable and configure ingress settings for the chart under this key.
# @default -- See values.yaml
ingress:
  enabled: false
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

persistence:
  enabled: true
  storageClass: ""
  accessModes:
    - ReadWriteMany
  size: 8Gi

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

priorityClassName: ""

affinity: {}

# -- Enable and configure mariadb database subchart under this key.
#    For more options see [mariadb chart documentation](https://github.com/bitnami/charts/tree/master/bitnami/mariadb)
# @default -- <https://github.com/bitnami/charts/blob/master/bitnami/mariadb/values.yaml>
mariadb:
  enabled: true
  image:
    repository: bitnamilegacy/mariadb
  architecture: standalone
  auth:
    rootPassword: "owncloud"
    database: owncloud
    username: "owncloud"
    password: "owncloud"
    replicationUser: replicator
    replicationPassword: "replication"
  primary:
    resources: {}
    priorityClassName: ""
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 8Gi
  metrics:
    enabled: false
    resources: {}
    serviceMonitor:
      enabled: false

# -- Enable and configure valkey subchart under this key.
#    For more options see [valkey chart documentation](https://github.com/valkey-io/valkey-helm/tree/main/valkey)
# @default -- <https://github.com/valkey-io/valkey-helm/blob/main/valkey/values.yaml>
valkey:
  # Number of Valkey pods to run
  replicaCount: 1

  # Resource limits/requests for the main Valkey container
  resources: {}
    # Example:
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

  # Persistent storage configuration
  dataStorage:
    # Enable persistent volume claim creation
    enabled: false

    # Use existing PVC by name (skip dynamic provisioning if set)
    persistentVolumeClaimName: ""

    # Name of the volume (referenced in deployment)
    volumeName: "valkey-data"

    # Request size (e.g. 5Gi) for dynamically provisioned volume
    requestedSize: 8Gi

    # Name of the storage class to use
    className: ""

    # Access modes for the PVC (e.g., ReadWriteOnce, ReadWriteMany)
    accessModes:
      - ReadWriteOnce

  auth:
    # Enable ACL-based authentication
    enabled: false

    # Default ACL rules (used only if auth.enabled is true)
    aclConfig: |
      # Users and permissions can be defined here
      # Example:
      # user default off
      # user default on >defaultpassword ~*  &* +@all 

  # Valkey logging level: debug, verbose, notice, warning
  valkeyLogLevel: "notice"

  metrics:
    # Enable Prometheus exporter sidecar
    enabled: false

    exporter:
      # Additional secrets to mount for metrics exporter
      extraExporterSecrets: []